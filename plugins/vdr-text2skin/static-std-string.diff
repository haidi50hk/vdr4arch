Index: b/display.c
===================================================================
--- a/display.c
+++ b/display.c
@@ -1393,8 +1393,6 @@
 
 // --- cText2SkinDisplayTracks ------------------------------------------------
 
-const std::string ChannelNames[] = { "", "stereo", "left", "right" };
-
 cText2SkinDisplayTracks::cText2SkinDisplayTracks(cText2SkinLoader *Loader, const char *Title,
                                                  int NumTracks, const char * const *Tracks):
 		cText2SkinRender(Loader, cxDisplay::audioTracks),
@@ -1414,9 +1412,15 @@
 {
 }
 
-const std::string &cText2SkinDisplayTracks::ChannelName(int AudioChannel)
+const char *cText2SkinDisplayTracks::ChannelName(int AudioChannel)
 {
-	return ChannelNames[AudioChannel + 1];
+	switch (AudioChannel)
+	{
+		case 0: return "stereo";
+		case 1: return "left";
+		case 2: return "right";
+	}
+	return "";
 }
 
 void cText2SkinDisplayTracks::SetTrack(int Index, const char * const *Tracks)
Index: b/display.h
===================================================================
--- a/display.h
+++ b/display.h
@@ -225,7 +225,7 @@
 	virtual void SetMaxItems(int MaxItems) { mMaxItems = MaxItems; }
 
 public:
-	static const std::string &ChannelName(int AudioChannel);
+	static const char *ChannelName(int AudioChannel);
 
 	cText2SkinDisplayTracks(cText2SkinLoader *Loader, const char *Title, int NumTracks,
 	                        const char * const *Tracks);
Index: b/render.c
===================================================================
--- a/render.c
+++ b/render.c
@@ -900,7 +900,7 @@
 		}
 
 	case tAudioChannel:
-		return cText2SkinDisplayTracks::ChannelName(cDevice::PrimaryDevice()->GetAudioChannel());
+		return cxType(cText2SkinDisplayTracks::ChannelName(cDevice::PrimaryDevice()->GetAudioChannel()));
 
 	default:             return Text2SkinStatus.GetTokenData(Token);
 	}
Index: b/common.c
===================================================================
--- a/common.c
+++ b/common.c
@@ -9,11 +9,13 @@
 
 #define FRONTEND_DEVICE "/dev/dvb/adapter%d/frontend%d"
 
-const std::string &SkinPath(void)
+const std::string SkinPath(void)
 {
 	// should never change
-	static std::string path = cPlugin::ConfigDirectory(PLUGIN_NAME_I18N);
-	return path;
+	static cString path;
+	if ((*path == NULL) || (strlen(*path) == 0))
+		path = cPlugin::ConfigDirectory(PLUGIN_NAME_I18N);
+	return std::string(*path);
 }
 
 const char *ChannelNumber(const cChannel *Channel, int Number)
Index: b/common.h
===================================================================
--- a/common.h
+++ b/common.h
@@ -35,7 +35,7 @@
 
 // helper functions
 
-const std::string &SkinPath(void);
+const std::string SkinPath(void);
 const char *ChannelNumber(const cChannel *Channel, int Number);
 const char *ChannelName(const cChannel *Channel, int Number);
 const char *ChannelShortName(const cChannel *Channel, int Number);
